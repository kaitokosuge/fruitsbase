// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  clerkId       String    @unique
  username      String?   
  name          String?
  bio           String?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  email         String    @unique
  Quiz          Quiz[]
  Category    Category[]
  User_Attempt User_Attempt[]
}

model Quiz {
  id          String   @id @default(cuid())
  question    String   @db.Text
  explanation String   @db.Text
  author      User     @relation(fields: [authorId], references: [id])
  authorId    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  Option      Option[]
  Category_Quiz Category_Quiz[]
  User_Attempt User_Attempt[]
}

model Option {
  id          String   @id @default(cuid())
  option      String
  is_correct  Boolean
  quiz        Quiz     @relation(fields: [quizId], references: [id])
  quizId      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Category {
  id          String   @id @default(cuid())
  name        String
  color       String?
  svg         String   @db.Text
  author      User     @relation(fields: [authorId], references: [id])
  authorId    String
  Category_Quiz Category_Quiz[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Category_Quiz{
  quiz            Quiz     @relation(fields: [quizId], references: [id])
  quizId          String
  category        Category     @relation(fields: [categoryId], references: [id])
  categoryId      String
  @@id([quizId, categoryId])
}

model User_Attempt {
  id              String   @id @default(cuid())
  quiz            Quiz     @relation(fields: [quizId], references: [id])
  quizId          String
  user            User     @relation(fields: [userId], references: [id])
  userId          String
  createdAt       DateTime @default(now())
}
